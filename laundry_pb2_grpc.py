# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import laundry_pb2 as laundry__pb2

GRPC_GENERATED_VERSION = '1.63.0'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in laundry_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class LaundryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateLaundry = channel.unary_unary(
                '/laundry.LaundryService/CreateLaundry',
                request_serializer=laundry__pb2.CreateRequest.SerializeToString,
                response_deserializer=laundry__pb2.CreateResponse.FromString,
                _registered_method=True)
        self.ReadLaundry = channel.unary_unary(
                '/laundry.LaundryService/ReadLaundry',
                request_serializer=laundry__pb2.ReadRequest.SerializeToString,
                response_deserializer=laundry__pb2.ReadResponse.FromString,
                _registered_method=True)
        self.UpdateLaundry = channel.unary_unary(
                '/laundry.LaundryService/UpdateLaundry',
                request_serializer=laundry__pb2.UpdateRequest.SerializeToString,
                response_deserializer=laundry__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.DeleteLaundry = channel.unary_unary(
                '/laundry.LaundryService/DeleteLaundry',
                request_serializer=laundry__pb2.DeleteRequest.SerializeToString,
                response_deserializer=laundry__pb2.DeleteResponse.FromString,
                _registered_method=True)
        self.ReadAllLaundry = channel.unary_unary(
                '/laundry.LaundryService/ReadAllLaundry',
                request_serializer=laundry__pb2.ReadAllRequest.SerializeToString,
                response_deserializer=laundry__pb2.ReadAllResponse.FromString,
                _registered_method=True)


class LaundryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateLaundry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadLaundry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLaundry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteLaundry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadAllLaundry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LaundryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateLaundry': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLaundry,
                    request_deserializer=laundry__pb2.CreateRequest.FromString,
                    response_serializer=laundry__pb2.CreateResponse.SerializeToString,
            ),
            'ReadLaundry': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadLaundry,
                    request_deserializer=laundry__pb2.ReadRequest.FromString,
                    response_serializer=laundry__pb2.ReadResponse.SerializeToString,
            ),
            'UpdateLaundry': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLaundry,
                    request_deserializer=laundry__pb2.UpdateRequest.FromString,
                    response_serializer=laundry__pb2.UpdateResponse.SerializeToString,
            ),
            'DeleteLaundry': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteLaundry,
                    request_deserializer=laundry__pb2.DeleteRequest.FromString,
                    response_serializer=laundry__pb2.DeleteResponse.SerializeToString,
            ),
            'ReadAllLaundry': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadAllLaundry,
                    request_deserializer=laundry__pb2.ReadAllRequest.FromString,
                    response_serializer=laundry__pb2.ReadAllResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'laundry.LaundryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LaundryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateLaundry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/laundry.LaundryService/CreateLaundry',
            laundry__pb2.CreateRequest.SerializeToString,
            laundry__pb2.CreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadLaundry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/laundry.LaundryService/ReadLaundry',
            laundry__pb2.ReadRequest.SerializeToString,
            laundry__pb2.ReadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateLaundry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/laundry.LaundryService/UpdateLaundry',
            laundry__pb2.UpdateRequest.SerializeToString,
            laundry__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteLaundry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/laundry.LaundryService/DeleteLaundry',
            laundry__pb2.DeleteRequest.SerializeToString,
            laundry__pb2.DeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadAllLaundry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/laundry.LaundryService/ReadAllLaundry',
            laundry__pb2.ReadAllRequest.SerializeToString,
            laundry__pb2.ReadAllResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
